# Generated by Django 3.1.7 on 2021-03-13 07:22

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_operator', models.BooleanField(default=False, verbose_name='Опертор')),
                ('is_assistant', models.BooleanField(default=False, verbose_name='Ассистент')),
                ('subscribe_mail', models.BooleanField(default=False, verbose_name='Подписка на почтовую рассылку')),
                ('telegram', models.CharField(blank=True, max_length=10, null=True, verbose_name='Телеграм чат-id')),
                ('subscribe_telegram', models.BooleanField(default=False, verbose_name='Подписка на рассылку в телеграм')),
                ('phone', models.CharField(max_length=100, verbose_name='Телефон')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название приложения')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Приложение',
                'verbose_name_plural': 'Приложения',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название мероприятия')),
                ('description', models.TextField(verbose_name='Описание')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Дата начала мероприятия')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='Дата окончания мероприятия')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('wait', 'Ожидание'), ('ready', 'Готово'), ('rejection', 'Отказ'), ('completed', 'Окончено')], default='wait', max_length=100, verbose_name='Статус мероприятия')),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
                'ordering': ['date_start'],
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название сервера')),
                ('server_address', models.CharField(blank=True, max_length=50, null=True, verbose_name='Адрес сервера')),
                ('quota', models.PositiveSmallIntegerField(verbose_name='Количество лицензий')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('server_type', models.CharField(choices=[('external', 'Внешний сервер'), ('local', 'Внутренний сервер')], default='local', max_length=100, verbose_name='Тип сервера')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.application', verbose_name='Приложение')),
                ('responsible', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Ответственные сотрудники')),
            ],
            options={
                'verbose_name': 'Сервер',
                'verbose_name_plural': 'Сервера',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('room', models.CharField(max_length=255, verbose_name='Комната')),
                ('quota', models.PositiveIntegerField(verbose_name='Вместимость')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('applications', models.ManyToManyField(related_name='related_room', to='schedule.Application', verbose_name='Доступные приложения')),
                ('responsible', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Ответственные сотрудники')),
            ],
            options={
                'verbose_name': 'Помещение',
                'verbose_name_plural': 'Помещения',
                'ordering': ['address'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название организации')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('room', models.ManyToManyField(related_name='related_room', to='schedule.Room', verbose_name='Доступные помещения')),
            ],
            options={
                'verbose_name': 'Организация',
                'verbose_name_plural': 'Организации',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.SmallIntegerField(choices=[(1, 'Очень плохо'), (2, 'Плохо'), (3, 'Удовлетворительно'), (4, 'Хорошо'), (5, 'Отлично')], verbose_name='Оценка')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.event', verbose_name='Мероприятие')),
            ],
            options={
                'verbose_name': 'Оценка',
                'verbose_name_plural': 'Оценки',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='event',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.organization', verbose_name='Организация'),
        ),
        migrations.AddField(
            model_name='event',
            name='responsible',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Ответственный сотрудник'),
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('file', models.FileField(blank=True, null=True, upload_to='uploads/%Y/%m/%d/', verbose_name='Файл')),
                ('quota', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Количество участников')),
                ('link', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ссылка')),
                ('date', models.DateField(verbose_name='Дата проведения')),
                ('time_start', models.TimeField(verbose_name='Время начала')),
                ('time_end', models.TimeField(verbose_name='Время окончания')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('wait', 'Ожидание'), ('ready', 'Готово'), ('rejection', 'Отказ'), ('completed', 'Окончено')], default='wait', max_length=100, verbose_name='Статус видеоконференции')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.event', verbose_name='Мероприятие')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Ответственный сотрудник')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.server', verbose_name='Сервер')),
            ],
            options={
                'verbose_name': 'Конференция',
                'verbose_name_plural': 'Конференции',
                'ordering': ['date', 'time_start'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('without_conference', models.BooleanField(default=False, verbose_name='Без конференции')),
                ('quota', models.PositiveSmallIntegerField(verbose_name='Количество участников')),
                ('date', models.DateField(verbose_name='Дата проведения')),
                ('time_start', models.TimeField(verbose_name='Время начала')),
                ('time_end', models.TimeField(verbose_name='Время окончания')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('wait', 'Ожидание'), ('ready', 'Готово'), ('rejection', 'Отказ'), ('completed', 'Окончено')], default='wait', max_length=100, verbose_name='Статус бронирования')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('conference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schedule.conference', verbose_name='Конференция')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.event', verbose_name='Мероприятие')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Ответственный сотрудник')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.room', verbose_name='Место проведения')),
            ],
            options={
                'verbose_name': 'Бронирование',
                'verbose_name_plural': 'Бронирования',
                'ordering': ['date', 'time_start'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schedule.organization', verbose_name='Организация'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
